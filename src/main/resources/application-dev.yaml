 
server.port: 8080
spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: password
  h2:
    console:
      enabled: true


#By design, the in-memory database is volatile and data will be lost when we restart the application.
#We can change that behavior by using file-based storage. To do this we need to update the spring.datasource.url:

#spring.datasource.url=jdbc:h2:file:/data/demo


#further configure the console by specifying the following properties 

#spring.h2.console.path=/h2-console
#spring.h2.console.settings.trace=false
#spring.h2.console.settings.web-allow-others=false


  jpa:
    properties:
      hibernate:
        jdbc:
          fetch_size: 100
          batch_size: 10
          order_inserts: true
          order_updates: true
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      use-new-id-generator-mappings: false
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: create
     # dialect: org.hibernate.dialect.Oracle10gDialect


logging:
  level:
    org.springframework.web: ERROR
    com.rbs.licensemanagement: DEBUG
  pattern:
    console: "%d{yyy-mm-dd HH:mm:ss} - %msg%n"
    file: "%d{yyy-mm-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file: /var/log/license-managment/license-api.log
log4j2:
 formatMsgNoLookups: true
 
 
 
 
